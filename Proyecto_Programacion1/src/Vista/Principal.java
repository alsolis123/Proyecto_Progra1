
package Vista;

import Clases.Capacidad;
import Configuracion.Conexion;
import com.sun.awt.AWTUtilities;
import static com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type.Int;
import java.awt.Color;
import java.io.IOException;
import java.sql.*;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.time.Period;
import java.time.format.DateTimeFormatter;
import javax.swing.table.DefaultTableModel;
import java.util.Date;
import java.util.Locale;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

public class Principal extends javax.swing.JFrame {
    Conexion con = new Conexion();
    Connection cn;
    Statement st;
    ResultSet rs;
    DefaultTableModel model;
    public int x,y;
    
    
    
    public Principal() {
        initComponents();
        setLocationRelativeTo(null);
        listar();
        estado.setBackground(new Color (77,92,126));
        
        //Darle movilidad a la ventana
        
        AWTUtilities.setWindowOpaque(this, false);
        
        //        Textfield transparentes
        nombre.setBackground(new java.awt.Color(0,0,0,1));
        apellido1.setBackground(new java.awt.Color(0,0,0,1));
        apellido2.setBackground(new java.awt.Color(0,0,0,1));
        identificacion.setBackground(new java.awt.Color(0,0,0,1));
        telefono.setBackground(new java.awt.Color(0,0,0,1));
        correo.setBackground(new java.awt.Color(0,0,0,1));
        
        direccion.setBackground(new java.awt.Color(0,0,0,1));
        id.setBackground(new java.awt.Color(0,0,0,1));
        universidad.setBackground(new java.awt.Color(0,0,0,1));
        observacion.setBackground(new java.awt.Color(0,0,0,1));
        
        //        Trasnparencia botones

        exit.setOpaque(false);
        exit.setContentAreaFilled(false);
        exit.setBorderPainted(false);
        
        back.setOpaque(false);
        back.setContentAreaFilled(false);
        back.setBorderPainted(false);
        
        //        Trasnparencia botones

        agregar.setOpaque(false);
        agregar.setContentAreaFilled(false);
        agregar.setBorderPainted(false);
        
        eliminar.setOpaque(false);
        eliminar.setContentAreaFilled(false);
        eliminar.setBorderPainted(false);
        
        modificar.setOpaque(false);
        modificar.setContentAreaFilled(false);
        modificar.setBorderPainted(false);
        
        limpiar_caja.setOpaque(false);
        limpiar_caja.setContentAreaFilled(false);
        limpiar_caja.setBorderPainted(false);
        
        
        
        
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        buttonGroup1 = new javax.swing.ButtonGroup();
        jPopupMenu1 = new javax.swing.JPopupMenu();
        apellido1 = new javax.swing.JTextField();
        apellido2 = new javax.swing.JTextField();
        identificacion = new javax.swing.JTextField();
        nombre = new javax.swing.JTextField();
        direccion = new javax.swing.JTextField();
        fecha = new com.toedter.calendar.JDateChooser();
        id = new javax.swing.JTextField();
        estado_civil = new javax.swing.JComboBox<>();
        pais = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        TablaDatos = new javax.swing.JTable();
        back = new javax.swing.JButton();
        universidad = new javax.swing.JTextField();
        telefono = new javax.swing.JTextField();
        correo = new javax.swing.JTextField();
        observacion = new javax.swing.JTextField();
        agregar = new javax.swing.JButton();
        eliminar = new javax.swing.JButton();
        modificar = new javax.swing.JButton();
        estado = new javax.swing.JToggleButton();
        limpiar_caja = new javax.swing.JButton();
        carrera = new javax.swing.JComboBox<>();
        exit = new javax.swing.JButton();
        filtrar = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();

        jLabel1.setText("jLabel1");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        apellido1.setFont(new java.awt.Font("Open Sans", 0, 14)); // NOI18N
        apellido1.setBorder(null);
        apellido1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                apellido1ActionPerformed(evt);
            }
        });
        getContentPane().add(apellido1, new org.netbeans.lib.awtextra.AbsoluteConstraints(456, 94, 110, 30));

        apellido2.setFont(new java.awt.Font("Open Sans", 0, 14)); // NOI18N
        apellido2.setBorder(null);
        apellido2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                apellido2ActionPerformed(evt);
            }
        });
        getContentPane().add(apellido2, new org.netbeans.lib.awtextra.AbsoluteConstraints(765, 94, 110, 30));

        identificacion.setFont(new java.awt.Font("Open Sans", 0, 14)); // NOI18N
        identificacion.setBorder(null);
        identificacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                identificacionActionPerformed(evt);
            }
        });
        getContentPane().add(identificacion, new org.netbeans.lib.awtextra.AbsoluteConstraints(1048, 94, 110, 30));

        nombre.setFont(new java.awt.Font("Open Sans", 0, 14)); // NOI18N
        nombre.setBorder(null);
        nombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nombreActionPerformed(evt);
            }
        });
        getContentPane().add(nombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(164, 94, 110, 30));
        nombre.getAccessibleContext().setAccessibleDescription("");

        direccion.setFont(new java.awt.Font("Open Sans", 0, 14)); // NOI18N
        direccion.setBorder(null);
        getContentPane().add(direccion, new org.netbeans.lib.awtextra.AbsoluteConstraints(1102, 158, 193, 30));

        fecha.setToolTipText("");
        fecha.setFont(new java.awt.Font("Open Sans", 0, 14)); // NOI18N
        getContentPane().add(fecha, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 158, 140, -1));

        id.setFont(new java.awt.Font("Open Sans", 0, 14)); // NOI18N
        id.setBorder(null);
        id.setEnabled(false);
        id.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idActionPerformed(evt);
            }
        });
        getContentPane().add(id, new org.netbeans.lib.awtextra.AbsoluteConstraints(1101, 230, 80, 20));

        estado_civil.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Sin especificar", "Soltero (a)", "Casado (a)", "Union Libre", "Divorciado (a)", "Viudo (a)" }));
        getContentPane().add(estado_civil, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 226, 119, -1));

        pais.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione uno", "Afghanistan", "Åland Islands", "Albania", "Algeria", "American Samoa", "Andorra", "Angola", "Anguilla", "Antarctica", "Antigua and Barbuda", "Argentina", "Armenia", "Aruba", "Australia", "Austria", "Azerbaijan", "The Bahamas", "Bahrain", "Bangladesh", "Barbados", "Belarus", "Belgium", "Belize", "Benin", "Bermuda", "Bhutan", "Bolivia", "Bonaire", "Bosnia and Herzegovina", "Botswana", "Bouvet Island", "Brazil", "British Indian Ocean Territory", "United States Minor Outlying Islands", "Virgin Islands (British)", "Virgin Islands (U.S.)", "Brunei", "Bulgaria", "Burkina Faso", "Burundi", "Cambodia", "Cameroon", "Canada", "Cape Verde", "Cayman Islands", "Central African Republic", "Chad", "Chile", "China", "Christmas Island", "Cocos (Keeling) Islands", "Colombia", "Comoros", "Republic of the Congo", "Democratic Republic of the Congo", "Cook Islands", "Costa Rica", "Croatia", "Cuba", "Curaçao", "Cyprus", "Czech Republic", "Denmark", "Djibouti", "Dominica", "Dominican Republic", "Ecuador", "Egypt", "El Salvador", "Equatorial Guinea", "Eritrea", "Estonia", "Ethiopia", "Falkland Islands", "Faroe Islands", "Fiji", "Finland", "France", "French Guiana", "French Polynesia", "French Southern and Antarctic Lands", "Gabon", "The Gambia", "Georgia", "Germany", "Ghana", "Gibraltar", "Greece", "Greenland", "Grenada", "Guadeloupe", "Guam", "Guatemala", "Guernsey", "Guinea", "Guinea-Bissau", "Guyana", "Haiti", "Heard Island and McDonald Islands", "Holy See", "Honduras", "Hong Kong", "Hungary", "Iceland", "India", "Indonesia", "Ivory Coast", "Iran", "Iraq", "Republic of Ireland", "Isle of Man", "Israel", "Italy", "Jamaica", "Japan", "Jersey", "Jordan", "Kazakhstan", "Kenya", "Kiribati", "Kuwait", "Kyrgyzstan", "Laos", "Latvia", "Lebanon", "Lesotho", "Liberia", "Libya", "Liechtenstein", "Lithuania", "Luxembourg", "Macau", "Republic of Macedonia", "Madagascar", "Malawi", "Malaysia", "Maldives", "Mali", "Malta", "Marshall Islands", "Martinique", "Mauritania", "Mauritius", "Mayotte", "Mexico", "Federated States of Micronesia", "Moldova", "Monaco", "Mongolia", "Montenegro", "Montserrat", "Morocco", "Mozambique", "Myanmar", "Namibia", "Nauru", "Nepal", "Netherlands", "New Caledonia", "New Zealand", "Nicaragua", "Niger", "Nigeria", "Niue", "Norfolk Island", "North Korea", "Northern Mariana Islands", "Norway", "Oman", "Pakistan", "Palau", "Palestine", "Panama", "Papua New Guinea", "Paraguay", "Peru", "Philippines", "Pitcairn Islands", "Poland", "Portugal", "Puerto Rico", "Qatar", "Republic of Kosovo", "Réunion", "Romania", "Russia", "Rwanda", "Saint Barthélemy", "Saint Helena", "Saint Kitts and Nevis", "Saint Lucia", "Saint Martin", "Saint Pierre and Miquelon", "Saint Vincent and the Grenadines", "Samoa", "San Marino", "São Tomé and Príncipe", "Saudi Arabia", "Senegal", "Serbia", "Seychelles", "Sierra Leone", "Singapore", "Sint Maarten", "Slovakia", "Slovenia", "Solomon Islands", "Somalia", "South Africa", "South Georgia", "South Korea", "South Sudan", "Spain", "Sri Lanka", "Sudan", "Suriname", "Svalbard and Jan Mayen", "Swaziland", "Sweden", "Switzerland", "Syria", "Taiwan", "Tajikistan", "Tanzania", "Thailand", "East Timor", "Togo", "Tokelau", "Tonga", "Trinidad and Tobago", "Tunisia", "Turkey", "Turkmenistan", "Turks and Caicos Islands", "Tuvalu", "Uganda", "Ukraine", "United Arab Emirates", "United Kingdom", "United States", "Uruguay", "Uzbekistan", "Vanuatu", "Venezuela", "Vietnam", "Wallis and Futuna", "Western Sahara", "Yemen", "Zambia", "Zimbabwe" }));
        getContentPane().add(pais, new org.netbeans.lib.awtextra.AbsoluteConstraints(456, 226, 117, -1));

        TablaDatos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id de Registro", "Nombre", "Primer Apellido", "Segundo Apellido", "Identificacion", "Carrera", "Estado Civil", "Pais de Origen", "Direccion", "Edad", "Universidad", "Telefono", "Correo", "Estado", "Observaciones"
            }
        ));
        TablaDatos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TablaDatosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(TablaDatos);
        if (TablaDatos.getColumnModel().getColumnCount() > 0) {
            TablaDatos.getColumnModel().getColumn(0).setHeaderValue("Id de Registro");
            TablaDatos.getColumnModel().getColumn(1).setHeaderValue("Nombre");
            TablaDatos.getColumnModel().getColumn(2).setHeaderValue("Primer Apellido");
            TablaDatos.getColumnModel().getColumn(3).setResizable(false);
            TablaDatos.getColumnModel().getColumn(3).setHeaderValue("Segundo Apellido");
            TablaDatos.getColumnModel().getColumn(4).setHeaderValue("Identificacion");
            TablaDatos.getColumnModel().getColumn(5).setHeaderValue("Carrera");
            TablaDatos.getColumnModel().getColumn(6).setHeaderValue("Estado Civil");
            TablaDatos.getColumnModel().getColumn(7).setHeaderValue("Pais de Origen");
            TablaDatos.getColumnModel().getColumn(8).setHeaderValue("Direccion");
            TablaDatos.getColumnModel().getColumn(9).setHeaderValue("Edad");
            TablaDatos.getColumnModel().getColumn(10).setHeaderValue("Universidad");
            TablaDatos.getColumnModel().getColumn(11).setHeaderValue("Telefono");
            TablaDatos.getColumnModel().getColumn(12).setHeaderValue("Correo");
            TablaDatos.getColumnModel().getColumn(13).setHeaderValue("Estado");
            TablaDatos.getColumnModel().getColumn(14).setHeaderValue("Observaciones");
        }

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 380, 1280, 210));

        back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backActionPerformed(evt);
            }
        });
        getContentPane().add(back, new org.netbeans.lib.awtextra.AbsoluteConstraints(11, 600, 50, 40));

        universidad.setFont(new java.awt.Font("Open Sans", 0, 14)); // NOI18N
        universidad.setBorder(null);
        universidad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                universidadActionPerformed(evt);
            }
        });
        getContentPane().add(universidad, new org.netbeans.lib.awtextra.AbsoluteConstraints(164, 287, 110, 30));

        telefono.setFont(new java.awt.Font("Open Sans", 0, 14)); // NOI18N
        telefono.setBorder(null);
        getContentPane().add(telefono, new org.netbeans.lib.awtextra.AbsoluteConstraints(164, 158, 110, 30));

        correo.setFont(new java.awt.Font("Open Sans", 0, 14)); // NOI18N
        correo.setBorder(null);
        getContentPane().add(correo, new org.netbeans.lib.awtextra.AbsoluteConstraints(456, 158, 110, 30));

        observacion.setFont(new java.awt.Font("Open Sans", 0, 14)); // NOI18N
        observacion.setBorder(null);
        getContentPane().add(observacion, new org.netbeans.lib.awtextra.AbsoluteConstraints(519, 287, 289, 30));

        agregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agregarActionPerformed(evt);
            }
        });
        getContentPane().add(agregar, new org.netbeans.lib.awtextra.AbsoluteConstraints(98, 348, 132, 30));

        eliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminarActionPerformed(evt);
            }
        });
        getContentPane().add(eliminar, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 348, 140, 30));

        modificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modificarActionPerformed(evt);
            }
        });
        getContentPane().add(modificar, new org.netbeans.lib.awtextra.AbsoluteConstraints(388, 348, 132, 30));

        estado.setText("Inactivo");
        estado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                estadoActionPerformed(evt);
            }
        });
        getContentPane().add(estado, new org.netbeans.lib.awtextra.AbsoluteConstraints(1200, 333, 87, -1));

        limpiar_caja.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                limpiar_cajaActionPerformed(evt);
            }
        });
        getContentPane().add(limpiar_caja, new org.netbeans.lib.awtextra.AbsoluteConstraints(531, 347, 140, 30));

        carrera.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione una carrera", "Administracion de Empresas", "Animacion", "Arquitectura", "Artes Plasticas", "Biologia", "Comercio Internacional", "Contaduria Publica", "Contaduria Publica", "Derecho", "Diseño Grafico", "Economia", "Enseñanza del Ingles", "Enseñanza preescolar", "Farmacia", "Filosofia", "Fisica teorica fundamental", "Fotografia", "Ingeneria Electromecanica", "Ingeneria Industrial", "Ingenieria Civil", "Ingenieria de alimentos", "Ingenieria del Software", "Ingenieria Electrica", "Ingenieria en Sistemas de Informacion", "Ingenieria Mecatronica", "Matematica teorica fundamental", "Medicina y Cirugia", "Mercadeo", "Odontologia", "Periodismo y Comunicacion", "Psicopedagogia", "Publicidad", "Relaciones Internacionales", "Sociologia", "Terapia Fisica", "Turismo" }));
        carrera.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                carreraActionPerformed(evt);
            }
        });
        getContentPane().add(carrera, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 226, 240, -1));

        exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitActionPerformed(evt);
            }
        });
        getContentPane().add(exit, new org.netbeans.lib.awtextra.AbsoluteConstraints(1280, 10, 40, 40));

        filtrar.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Edad", "Identificacion", "Nombre" }));
        filtrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                filtrarActionPerformed(evt);
            }
        });
        getContentPane().add(filtrar, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 350, 100, -1));

        jLabel2.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                jLabel2MouseDragged(evt);
            }
        });
        jLabel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel2MousePressed(evt);
            }
        });
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, -4, 1340, 650));

        jLabel12.setIcon(new javax.swing.ImageIcon("C:\\Users\\alsolis\\Desktop\\Imagenes Java\\Base de Datos.png")); // NOI18N
        getContentPane().add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void apellido1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_apellido1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_apellido1ActionPerformed

    private void apellido2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_apellido2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_apellido2ActionPerformed

    private void identificacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_identificacionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_identificacionActionPerformed

    private void nombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nombreActionPerformed

    private void agregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agregarActionPerformed
        try{
        agregar();
        vaciar_cajas();
        limpiar();
        listar();
        }catch(IOException e){
            JOptionPane.showMessageDialog(null, e);
        }
        
    }//GEN-LAST:event_agregarActionPerformed

    private void eliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminarActionPerformed
        eliminar();
        vaciar_cajas();
        limpiar();
        listar();
    }//GEN-LAST:event_eliminarActionPerformed

    private void TablaDatosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TablaDatosMouseClicked
        int fila = TablaDatos.getSelectedRow();
        
        if(fila == -1){
            JOptionPane.showMessageDialog(null, "Usuario no seleccionado");
       }else{
           
           String estud = (String)TablaDatos.getValueAt(fila, 0);
           String nom = (String)TablaDatos.getValueAt(fila, 1);
           String apel1 = (String)TablaDatos.getValueAt(fila, 2);
           String apel2 = (String)TablaDatos.getValueAt(fila, 3);
           String iden = (String)TablaDatos.getValueAt(fila, 4);
           String carrer = (String)TablaDatos.getValueAt(fila, 5);
           String civil = (String)TablaDatos.getValueAt(fila, 6);
           String origen = (String)TablaDatos.getValueAt(fila, 7);
           String direcc = (String)TablaDatos.getValueAt(fila, 8);
           String uni = (String)TablaDatos.getValueAt(fila, 10);
           String phone = (String)TablaDatos.getValueAt(fila, 11);
           String email = (String)TablaDatos.getValueAt(fila, 12);
           String status = (String)TablaDatos.getValueAt(fila, 13);
           String obs = (String)TablaDatos.getValueAt(fila, 14);
           boolean estado;
           
           if(status.equals("Activo")){
               estado = true;
               this.estado.setBackground(new Color(82, 146, 6));
               this.estado.setText("Activo");
           }else{
               estado = false;
               this.estado.setBackground(new Color (187,187,187));
               this.estado.setText("Inactivo");
           }
           
           

           String sql= "Select fecha_de_nacimiento from principal where idprincipal = "+ estud;
           try{
               cn= con.getConnection();
               st= cn.createStatement();
               rs= st.executeQuery(sql);
               while(rs.next()){
                    String fecha1 = rs.getString("fecha_de_nacimiento");

                    SimpleDateFormat formato = new SimpleDateFormat("dd/MM/yyyy");
                    Date date1 = formato.parse(fecha1);

                    id.setText(estud);
                    nombre.setText(nom);
                    apellido1.setText(apel1);
                    apellido2.setText(apel2);
                    identificacion.setText(iden);
                    carrera.setSelectedItem(carrer);
                    estado_civil.setSelectedItem(civil);
                    pais.setSelectedItem(origen);
                    direccion.setText(direcc);
                    fecha.setDate(date1);
                    universidad.setText(uni);
                    telefono.setText(phone);
                    correo.setText(email);
                    this.estado.setSelected(estado);
                    
                    observacion.setText(obs);
               }
               
            
               
               
           }catch(Exception ex){
               JOptionPane.showMessageDialog(null, ex);
           
           
           
        }
        }
    }//GEN-LAST:event_TablaDatosMouseClicked

    private void modificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modificarActionPerformed
        try{
            modificar();
            limpiar();
            listar();
        }catch(java.lang.NullPointerException ex){
            JOptionPane.showMessageDialog(null, "Debe de seleccionar algo de la lista");
        } catch (IOException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_modificarActionPerformed

    private void limpiar_cajaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_limpiar_cajaActionPerformed
        vaciar_cajas();
    }//GEN-LAST:event_limpiar_cajaActionPerformed

    private void estadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_estadoActionPerformed
        if(estado.isSelected()){
            estado.setBackground(new Color(82, 146, 6));
            estado.setText("Activo");
        }else{
            estado.setBackground(new Color (77,92,126));
            estado.setText("Inactivo");
        }
    }//GEN-LAST:event_estadoActionPerformed

    private void carreraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_carreraActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_carreraActionPerformed

    private void backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backActionPerformed
        Distribucion dis = new Distribucion();
        dis.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_backActionPerformed

    private void exitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitActionPerformed
        System.exit(0);
    }//GEN-LAST:event_exitActionPerformed

    private void universidadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_universidadActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_universidadActionPerformed

    private void idActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_idActionPerformed

    private void filtrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_filtrarActionPerformed
        
    }//GEN-LAST:event_filtrarActionPerformed

    private void jLabel2MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MousePressed
        x = evt.getX();
        y = evt.getY();
    }//GEN-LAST:event_jLabel2MousePressed

    private void jLabel2MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MouseDragged
        this.setLocation(this.getLocation().x + evt.getX() - x, this.getLocation().y + evt.getY() - y);
    }//GEN-LAST:event_jLabel2MouseDragged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Principal().setVisible(true);
            }
        });
    }
    void vaciar_cajas(){
        id.setText(null);
        nombre.setText("");
        apellido1.setText("");
        apellido2.setText("");
        identificacion.setText("");
        carrera.setSelectedItem("Seleccione una carrera");
        estado_civil.setSelectedItem("Sin especificar");
        pais.setSelectedItem("Seleccione uno");
        direccion.setText("");
        fecha.setDate(null);
        universidad.setText("");
        telefono.setText("");
        correo.setText("");
        estado.setSelected(false);
        observacion.setText("");
        estado.setBackground(new Color (187,187,187));
        estado.setText("Inactivo");
    }
    void modificar() throws IOException{
        
        String ida = id.getText();
        String nom = nombre.getText();
        String ap1 = apellido1.getText();
        String ap2 = apellido2.getText();
        String id = identificacion.getText();
        String carrer = (String)carrera.getSelectedItem();
        String civil = (String)estado_civil.getSelectedItem();
        String p_origen = (String)pais.getSelectedItem();
        String direc = direccion.getText();
        String uni = universidad.getText();
        String cell = telefono.getText();
        String email = correo.getText();
        boolean status = estado.isSelected();
        String obs = observacion.getText();
        
        //        Obtener fecha

        Date nacimiento = fecha.getDate();
        LocalDate ahora = LocalDate.now();
        LocalDate fecha_nacimiento;
        DateTimeFormatter fmt = DateTimeFormatter.ofPattern("dd/MM/yyyy");
        SimpleDateFormat formato = new SimpleDateFormat("dd/MM/yyyy");
        String fechaCadena = formato.format(nacimiento);
        fecha_nacimiento = LocalDate.parse(fechaCadena, fmt);
        Period periodo = Period.between(fecha_nacimiento, ahora);
        String años = String.valueOf(periodo.getYears());
        String meses = String.valueOf(periodo.getMonths());
        String dias = String.valueOf(periodo.getDays());
        String edad =  años + " años " + meses + " meses "+dias+" dias" ;
        
        //Manejo de activos e inactivos
        String estado;
        
        if(status==true){
            estado ="Activo";
        }else{
            estado="Inactivo";
        }
        
        
        if(nom.equals("")||ap1.equals("")||ap2.equals("")||id.equals("")||carrer.equals("")||civil.equals("")||
            p_origen.equals("")||direc.equals("")||uni.equals("")||cell.equals("")||
            email.equals("")){
            
            JOptionPane.showMessageDialog(null, "Falto uno o mas valores de ingresar");
        }else{
            Capacidad cup = new Capacidad();
           
           if(cup.Cantidad_listadas(p_origen) < cup.Capacidad_personas(p_origen)||status==false){
            String sql = "update principal set nombre='"+nom+"',primer_apellido='"+ap1+"',segundo_apellido='"+ap2+"',identificacion='"+id+"',carrera='"+carrer+
                "',estado_civil='"+civil+"',pais_de_origen='"+p_origen+"',direccion='"+direc+"',fecha_de_nacimiento='"+fechaCadena+
                "',edad='"+edad+"',universidad='"+uni+"',telefono='"+cell+"',correo='"+email+"',estado='"+estado+"',observaciones='"+obs+"' where idprincipal="+ida;
            try{
                cn=con.getConnection();
                st=cn.createStatement();
                st.executeUpdate(sql);
                JOptionPane.showMessageDialog(null, "Registro actualizado");
                vaciar_cajas();
            }catch(Exception ex){
                JOptionPane.showMessageDialog(null, ex);
            }
           }else{
               JOptionPane.showMessageDialog(null, "No se puede activar este usuario ya que este pais no cuenta con mas cupos de becados");
           }
        } 
    }
    
    void eliminar(){
        int fila = TablaDatos.getSelectedRow();
        String ida = (String)TablaDatos.getValueAt(fila, 0);
        
        String sql = "delete from principal where idprincipal = "+ida;
        try{
            
            cn=con.getConnection();
            st=cn.createStatement();
            st.executeUpdate(sql);
            JOptionPane.showMessageDialog(null, "Eliminado");
            
        
        }catch(Exception ex){
            
            JOptionPane.showMessageDialog(null, ex);
            
        }
       
    }
    
    void listar(){
        
        String sql = "Select * from principal";
        try{
        cn= con.getConnection();
        st= cn.createStatement();
        rs= st.executeQuery(sql); 
        Object[]estudiante = new Object[16];
        model = (DefaultTableModel) TablaDatos.getModel();
        while(rs.next()){
            
            estudiante[0]=rs.getString("idprincipal");
            estudiante[1]=rs.getString("nombre");
            estudiante[2]=rs.getString("primer_apellido");
            estudiante[3]=rs.getString("segundo_apellido");
            estudiante[4]=rs.getString("identificacion");
            estudiante[5]=rs.getString("carrera");
            estudiante[6]=rs.getString("estado_civil");
            estudiante[7]=rs.getString("pais_de_origen");
            estudiante[8]=rs.getString("direccion");
            estudiante[9]=rs.getString("edad");
            estudiante[10]=rs.getString("universidad");
            estudiante[11]=rs.getString("telefono");
            estudiante[12]=rs.getString("correo");
            estudiante[13]=rs.getString("estado");
            estudiante[14]=rs.getString("observaciones");
            model.addRow(estudiante);
        }
        TablaDatos.setModel(model);
        
        }catch(Exception ex){
            JOptionPane.showMessageDialog(null, ex);
            
        }
        
    }
    void limpiar(){
        for (int i = 0; i < TablaDatos.getRowCount(); i++) {
            model.removeRow(i);
            i--;
        }
    }
            
    void agregar() throws IOException{
        
        
        boolean condicion = false;
        String nom = nombre.getText();
        String ap1 = apellido1.getText();
        String ap2 = apellido2.getText();
        String id = identificacion.getText();
        String carrer = (String)carrera.getSelectedItem();
        String civil = (String)estado_civil.getSelectedItem();
        String p_origen = (String)pais.getSelectedItem();
        String direc = direccion.getText();
        String uni = universidad.getText();
        String cell = telefono.getText();
        String email = correo.getText();
        boolean status = this.estado.isSelected();
        String obs = observacion.getText();
        String estado;
        
        if(status==true){
            estado ="Activo";
        }else{
            estado="Inactivo";
        }
        
        Capacidad cup = new Capacidad();
           
        if(cup.Cantidad_listadas(p_origen) < cup.Capacidad_personas(p_origen)||status==false){
        
        try{
            Date nacimiento = fecha.getDate();
            LocalDate ahora = LocalDate.now();
            LocalDate fecha_nacimiento;
            DateTimeFormatter fmt = DateTimeFormatter.ofPattern("dd/MM/yyyy");
            SimpleDateFormat formato = new SimpleDateFormat("dd/MM/yyyy");
            String fechaCadena = formato.format(nacimiento);
            fecha_nacimiento = LocalDate.parse(fechaCadena, fmt);
            Period periodo = Period.between(fecha_nacimiento, ahora);
            String años = String.valueOf(periodo.getYears());
            String meses = String.valueOf(periodo.getMonths());
            String dias = String.valueOf(periodo.getDays());
            String edad =  años + " años " + meses + " meses "+dias+" dias" ;
            

            if(nom.equals("")||ap1.equals("")||ap2.equals("")||id.equals("")||carrer.equals("")||civil.equals("")||
                    p_origen.equals("")||direc.equals("")||uni.equals("")||cell.equals("")||
                    email.equals("")||condicion == true){

                JOptionPane.showMessageDialog(null, "Falto uno o mas valores de ingresar");
                condicion = false;
            }else{
                
                String sql = "insert into principal(nombre, primer_apellido, segundo_apellido, identificacion, carrera, estado_civil, pais_de_origen, direccion, fecha_de_nacimiento, edad, universidad, telefono, correo, estado, observaciones)values('"+nom+"', '"+ap1+"', '"+ap2+"', '"+id+"', '"+carrer+"', '"+civil+"', '"+p_origen+"', '"+direc+"', '"+fechaCadena+"', '"+edad+"', '"+uni+"', '"+cell+"', '"+email+"','"+estado+"', '"+obs+"')";
                try{
                    
                    
                    cn = con.getConnection();
                    st = cn.createStatement();
                    st.executeUpdate(sql);
                    JOptionPane.showMessageDialog(null,"Usuario Agregado");
                    
                }catch(Exception ex){
                    JOptionPane.showMessageDialog(null, ex);
                }
            }    



        }catch(java.lang.NullPointerException ex){
            condicion = true;
        }
        }else{
            JOptionPane.showMessageDialog(null, "Ya no hay becas para este pais");
        }
        
        
        
        
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JTable TablaDatos;
    private javax.swing.JButton agregar;
    private javax.swing.JTextField apellido1;
    private javax.swing.JTextField apellido2;
    private javax.swing.JButton back;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox<String> carrera;
    private javax.swing.JTextField correo;
    private javax.swing.JTextField direccion;
    private javax.swing.JButton eliminar;
    private javax.swing.JToggleButton estado;
    private javax.swing.JComboBox<String> estado_civil;
    private javax.swing.JButton exit;
    private com.toedter.calendar.JDateChooser fecha;
    private javax.swing.JComboBox<String> filtrar;
    private javax.swing.JTextField id;
    private javax.swing.JTextField identificacion;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton limpiar_caja;
    private javax.swing.JButton modificar;
    private javax.swing.JTextField nombre;
    private javax.swing.JTextField observacion;
    private javax.swing.JComboBox<String> pais;
    private javax.swing.JTextField telefono;
    private javax.swing.JTextField universidad;
    // End of variables declaration//GEN-END:variables
}
